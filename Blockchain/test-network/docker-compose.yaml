version: '2'

networks: 
  test:

volumes: 
  peer0.org1.example.com:
  peer0.org1.example.com-worldstate:
  peer0.org2.example.com:
  peer0.org2.example.com-worldstate:
  orderer.example.com:
  ca.org1.example.com:
  ca.org2.example.com:

services: 
  peer0.org1.example.com:
    container_name: peer0.org1.example.com
    extends: 
      file: base/base.yaml
      service: peer-base
    environment: 
      - CORE_PEER_ID=peer0.org1.example.com
      - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org1.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org1.example.com:7051
      - CORE_PEER_LOCALMSPID=Org1MSP

      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.org1.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
    volumes: 
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org1.example.com/peers/peer0.org1.example.com/msp:/etc/hyperledger/fabric/msp
        - peer0.org1.example.com:/var/hyperledger/production
    networks: 
      - test
    ports: 
      - 7051:7051

  peer0.org2.example.com:
    container_name: peer0.org2.example.com
    extends: 
      file: base/base.yaml
      service: peer-base
    environment: 
      - CORE_PEER_ID=peer0.org2.example.com
      - CORE_PEER_ADDRESS=peer0.org2.example.com:7051
      - CORE_PEER_LISTENADDRESS=0.0.0.0:7051
      - CORE_PEER_CHAINCODEADDRESS=peer0.org2.example.com:7052
      - CORE_PEER_CHAINCODELISTENADDRESS=0.0.0.0:7052
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=peer0.org2.example.com:7051
      - CORE_PEER_LOCALMSPID=Org2MSP

      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=couchdb.org2.example.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=admin
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=adminpw
    volumes: 
        - /var/run/:/host/var/run/
        - ./crypto-config/peerOrganizations/org2.example.com/peers/peer0.org2.example.com/msp:/etc/hyperledger/fabric/msp
        - peer0.org2.example.com:/var/hyperledger/production
    networks: 
      - test
    ports: 
      - 8051:7051
  
  orderer.example.com:
    extends:
      file:   ./base/base.yaml
      service: orderer-base
    container_name: orderer.example.com
    volumes:
        - ./artifacts/genesis.block:/var/hyperledger/orderer/orderer.genesis.block
        - ./crypto-config/ordererOrganizations/orderer.example.com/orderers/orderer.example.com/msp:/var/hyperledger/orderer/msp
        - orderer.example.com:/var/hyperledger/production/orderer
    networks: 
       - test
    ports: 
      - 7050:7050


  couchdb.org1.example.com:
        container_name: couchdb.org1.example.com
        image: hyperledger/fabric-couchdb
        environment:
            - COUCHDB_USER=admin
            - COUCHDB_PASSWORD=adminpw
        volumes:
            - peer0.org1.example.com-worldstate:/opt/couchdb
        networks:
            - test
        ports: 
          - 5984:5984
        depends_on:
          - peer0.org1.example.com

  couchdb.org2.example.com:
    container_name: couchdb.org2.example.com
    image: hyperledger/fabric-couchdb
    environment:
        - COUCHDB_USER=admin
        - COUCHDB_PASSWORD=adminpw
    volumes:
        - peer0.org2.example.com-worldstate:/opt/couchdb
    networks:
        - test
    ports: 
      - 6984:5984
    depends_on:
      - peer0.org2.example.com

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:2.0
    tty: true
    stdin_open: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=INFO
      - CORE_PEER_ID=cli
      # - CORE_PEER_ADDRESS=peer0.org1.example.com:7051
      # - CORE_PEER_LOCALMSPID=Org1MSP
      # - CORE_PEER_TLS_ENABLED=false
      # - CORE_PEER_MSPCONFIGPATH=/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto/peerOrganizations/org1.example.com/users/Admin@org1.example.com/msp
    working_dir: /opt/gopath/src/github.com/hyperledger/fabric/peer
    command: /bin/bash
    volumes:
        - /var/run/:/host/var/run/
        - ../Chaincode/:/opt/gopath/src/chaincode
        - ../test-network:/opt/gopath/src/github.com/hyperledger/fabric/peer
        # - ./crypto-config:/opt/gopath/src/github.com/hyperledger/fabric/peer/crypto-config
        # - ./artifacts:/opt/gopath/src/github.com/hyperledger/fabric/peer/artifacts
    networks:
      - test
  
  ca.org1.example.com:
    container_name: ca.org1.example.com
    extends:
        file: ./base/base.yaml
        service: ca-base
    environment:
        - FABRIC_CA_SERVER_CA_NAME=ca.org1.example.com
        - FABRIC_CA_SERVER_TLS_CERTFILE=/ca/ca.org1.example.com-cert.pem
    volumes:
        - ./crypto-config/peerOrganizations/org1.example.com/ca:/ca
        - ca.org1.example.com:/etc/hyperledger/fabric-ca-server
    ports:
        - 7054:7054
    networks:
        - test
    command: sh -c 'fabric-ca-server start --ca.certfile /ca/ca.org1.example.com-cert.pem --ca.keyfile /ca/priv_sk -b admin:adminpw -d'


  ca.org2.example.com:
    container_name: ca.org2.example.com
    extends:
        file: ./base/base.yaml
        service: ca-base
    environment:
        - FABRIC_CA_SERVER_CA_NAME=ca.org2.example.com
        - FABRIC_CA_SERVER_TLS_CERTFILE=/ca/ca.org2.example.com-cert.pem
    volumes:
        - ./crypto-config/peerOrganizations/org2.example.com/ca:/ca
        - ca.org2.example.com:/etc/hyperledger/fabric-ca-server
    ports:
        - 8054:7054
    networks:
        - test
    command: sh -c 'fabric-ca-server start --ca.certfile /ca/ca.org2.example.com-cert.pem --ca.keyfile /ca/priv_sk -b admin:adminpw -d'
            
  # bcnodeapi:
  #   container_name: bcnodeapi
  #   image: zzocker20/fabricnodeapi
    # networks: 
    #   - test
    # ports: 
    #   - 3000:3000